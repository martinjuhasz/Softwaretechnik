<UserControl x:Class="PikachuManager.View.DragNDrop.DesignerCanvasControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             
             xmlns:cb="clr-namespace:PikachuViewBase.AttachedBehavior;assembly=PikachuViewBase"
             xmlns:managerViewDragNDrop="clr-namespace:PikachuManager.View.DragNDrop"
             xmlns:converters="clr-namespace:PikachuManager.Converters"

             d:DesignHeight="300" d:DesignWidth="300"
             
             Focusable="True">


    <UserControl.Resources>
        <!-- MoveThumb Template -->
        <ControlTemplate x:Key="MoveThumbTemplate" TargetType="{x:Type managerViewDragNDrop:MoveThumb}">
            <Rectangle Fill="Transparent"/>
        </ControlTemplate>

        <!-- Designer Item Template-->
        <ControlTemplate x:Key="DesignerItemTemplate" TargetType="ContentControl">
            <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <managerViewDragNDrop:MoveThumb Template="{StaticResource MoveThumbTemplate}" Cursor="SizeAll" x:Name="moveThumb" />
                <ContentPresenter Content="{TemplateBinding ContentControl.Content}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=Lock}" Value="True">
                    <Setter Property="Visibility" TargetName="moveThumb" Value="Hidden"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Lock}" Value="False">
                    <Setter Property="Visibility" TargetName="moveThumb" Value="Visible"></Setter>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <DropShadowEffect x:Key="dropShadow" BlurRadius="25" />

    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding Key="D" Command="{Binding DeleteItemCommand}"></KeyBinding>
        <KeyBinding Key="B" Command="{Binding OpenWorkflowitemCommand}"></KeyBinding>
    </UserControl.InputBindings>
    
    <Grid>

        

        <!-- Befülle Canvas mit Elementen aus der ItemsSource, Lege DataTemplate zur Anzeige fest, Setze Position -->
        <ScrollViewer x:Name="DesignerScrollViewer" 
                                      Background="Transparent"
                                      HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding CurrentCanvasObjects}"
                          cb:MouseRightButtonDown.Command="{Binding SelectItemCommand}"
                          ItemContainerStyleSelector="{x:Static converters:DesignerItemsControlItemStyleSelector.Instance}">

                <ItemsControl.Resources>
                    <!-- Der ItemSelector entscheidet anhand des ViewModels welcher Style angewendet wird -->
                    <Style x:Key="workflowItemStyle" TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Canvas.Top" Value="{Binding Top}" />
                        <Setter Property="Canvas.Left" Value="{Binding Left}" />
                        <Setter Property="Canvas.ZIndex" Value="10" />
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Grid>
                                        <ContentControl Template="{StaticResource DesignerItemTemplate}" cb:FocusExtension.IsFocused="{Binding IsSelected}"
                                           cb:MouseRightButtonDown.Command="{Binding DataContext.SelectItemCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                           cb:MouseRightButtonDown.CommandParameter="{Binding }">
                                            <Border x:Name="workflowItemBorder" BorderThickness="{Binding BorderWidth}"
                                                BorderBrush="Transparent"
                                                VerticalAlignment="Top"
                                                IsHitTestVisible="False">
                                                <Image x:Name="workflowItemImage"
                                                   Stretch="Fill"
                                                   Width="{Binding Width}"
                                                   Height="{Binding Height}"
                                                   Source="{Binding Image, Converter={x:Static converters:ImageUrlConverter.Instance}}" />
                                            </Border>
                                        </ContentControl>
                                       
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <!-- Hebe gesperrte WorkflowItems mit Border hervor -->
                                            <DataTrigger Binding="{Binding Path=Lock}" Value="True">
                                                <Setter Property="BorderBrush" TargetName="workflowItemBorder" Value="Red"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=Lock}" Value="False">
                                                <Setter Property="BorderBrush" TargetName="workflowItemBorder" Value="Transparent"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                                <Setter Property="Effect" TargetName="workflowItemImage" Value="{StaticResource dropShadow}"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                            <Setter Property="Effect" TargetName="workflowItemImage" Value="{x:Null}"></Setter>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>


                    <Style x:Key="taskItemStyle" TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Canvas.Top" Value="{Binding Top}" />
                        <Setter Property="Canvas.Left" Value="{Binding Left}" />
                        <Setter Property="Canvas.ZIndex" Value="10" />
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Grid>
                                        <ContentControl Template="{StaticResource DesignerItemTemplate}" cb:FocusExtension.IsFocused="{Binding IsSelected}"
                                           cb:MouseRightButtonDown.Command="{Binding DataContext.SelectItemCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                           cb:MouseRightButtonDown.CommandParameter="{Binding }">
                                            <StackPanel>
                                                <Label HorizontalAlignment="Center" Height="25" Margin="0" Content="{Binding Name}"></Label>

                                                <Border x:Name="workflowItemBorder" BorderThickness="{Binding BorderWidth}"
                                                BorderBrush="Transparent"
                                                VerticalAlignment="Top"
                                                IsHitTestVisible="False">
                                                    <Image x:Name="workflowItemImage"
                                                   Stretch="Fill"
                                                   Width="{Binding Width}"
                                                   Height="{Binding Height}"
                                                   Source="{Binding Image, Converter={x:Static converters:ImageUrlConverter.Instance}}" />
                                                </Border>
                                            </StackPanel>
                                            
                                        </ContentControl>

                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <!-- Hebe gesperrte WorkflowItems mit Border hervor -->
                                        <DataTrigger Binding="{Binding Path=Lock}" Value="True">
                                            <Setter Property="BorderBrush" TargetName="workflowItemBorder" Value="Red"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Lock}" Value="False">
                                            <Setter Property="BorderBrush" TargetName="workflowItemBorder" Value="Transparent"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                            <Setter Property="Effect" TargetName="workflowItemImage" Value="{StaticResource dropShadow}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                            <Setter Property="Effect" TargetName="workflowItemImage" Value="{x:Null}"></Setter>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>


                    
                    <Style x:Key="connectorStyle"  TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Canvas.ZIndex" Value="8" />
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <ContentControl cb:MouseRightButtonDown.Command="{Binding DataContext.SelectItemCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                        cb:MouseRightButtonDown.CommandParameter="{Binding }" cb:FocusExtension.IsFocused="{Binding IsSelected}">
                                        <Line Stroke="#7899DC" StrokeThickness="9" Cursor="Hand"
                                        X1="{Binding X1}" Y1="{Binding Y1}"
                                        X2="{Binding X2}" Y2="{Binding Y2}" x:Name="connectorLine" />
                                    </ContentControl>
                                    
                                    <DataTemplate.Triggers>
                                        
                                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                            <Setter Property="Effect" TargetName="connectorLine" Value="{StaticResource dropShadow}"></Setter>
                                            <Setter Property="Stroke" TargetName="connectorLine" Value="#537ADC"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                            <Setter Property="Effect" TargetName="connectorLine" Value="{x:Null}"></Setter>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    
                </ItemsControl.Resources>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <managerViewDragNDrop:DesignerCanvas x:Name="MyDesignerCanvas" Background="White"></managerViewDragNDrop:DesignerCanvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</UserControl>
